{"version":3,"file":"vanilla-carousel.esm.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["export function timer(ms: number): Promise<NodeJS.Timeout> {\n  return new Promise(r => setTimeout(r, ms))\n}\n\n/**\n * Return state of tab visibility.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\n */\nexport function visibilityChange(cb: (h: boolean) => void) {\n  function handleVisibilityChange() {\n    if (document.hidden) {\n      cb(true)\n    } else {\n      cb(false)\n    }\n  }\n\n  document.addEventListener('visibilitychange', handleVisibilityChange, false)\n}\n","import './style.scss'\n\nimport { timer, visibilityChange } from './utils'\n\nexport interface ICarousel {\n  autoplay: number | boolean\n  prev: string | boolean\n  next: string | boolean\n  progress: boolean\n  loop: boolean\n  pauseOnHover: boolean\n  keyboardNav: boolean\n}\n\nexport default class Carousel {\n  public options: ICarousel\n\n  carousel: Element\n  controller: HTMLElement\n  items: HTMLCollectionOf<Element>\n  itemsEle: Element\n  nodes: Element[]\n  maxLength: number\n  maxArrayLength: number\n  activeItem: Element\n\n  private _hidden: boolean = false\n  private _timeout: number | boolean = false\n  private _stop: boolean = false\n  private _paused: boolean = false\n  private _time: number = 0\n  private _running: boolean = false\n  private _call: NodeJS.Timeout\n\n  constructor(element: Element, options: ICarousel) {\n    const defaults: ICarousel = {\n      autoplay: 0,\n      prev: false,\n      next: false,\n      progress: false,\n      loop: false,\n      pauseOnHover: false,\n      keyboardNav: false,\n    }\n\n    this.options = { ...defaults, ...options }\n    this.carousel = element\n    this.controller = <HTMLElement>this.carousel.querySelector('.carousel__controller') // prettier-ignore\n\n    const itemsEle = this.carousel.querySelector('.carousel__items')\n    if (!itemsEle) {\n      throw new Error(\"Please create a `carousel__items` element with `item`'s!\")\n    }\n    this.itemsEle = itemsEle\n\n    this.items = this.itemsEle.getElementsByClassName('item')\n    this.nodes = Array.from(this.items)\n    this.maxLength = this.items.length\n    this.maxArrayLength = this.maxLength - 1\n\n    if (this.maxLength <= 1) {\n      throw new Error('You must have at least two items in your carousel!')\n    }\n\n    if (!this.carousel.querySelector('.carousel__items .item.active')) {\n      this.items[0].classList.add('active')\n    }\n\n    this.activeItem = <HTMLElement>this.itemsEle.querySelector('.item.active') // prettier-ignore\n\n    this.buildHeight()\n    this.createKey() // just for developing to better diff the items\n    this.initCtrl()\n    this.onHiddenDocument()\n  }\n\n  async onHiddenDocument() {\n    visibilityChange(hidden => {\n      if (hidden) {\n        this.stop(true)\n      } else {\n        this.autoplay()\n      }\n    })\n  }\n\n  async initCtrl() {\n    if (!this.controller) {\n      throw new Error(\n        'You must have a controller element if you want to use controlls!'\n      )\n    }\n\n    // with progress\n    if (this.options.progress) {\n      await this.createProgress()\n    }\n\n    // on click\n    if (this.options.prev && this.controller) {\n      let prevCtrl = this.controller.querySelector('.prev')\n      if (!prevCtrl) {\n        prevCtrl = await this.createPrev()\n      }\n      prevCtrl.addEventListener('click', () => {\n        this.stop()\n        this.prevItem()\n      })\n    }\n    if (this.options.next && this.controller) {\n      let nextCtrl = this.controller.querySelector('.next')\n      if (!nextCtrl) {\n        nextCtrl = await this.createNext()\n      }\n      nextCtrl.addEventListener('click', () => {\n        this.stop()\n        this.nextItem()\n      })\n    }\n\n    // on play, pause, stop\n    const play = <HTMLElement>this.controller.querySelector('.play')\n    if (play) {\n      play.addEventListener('click', () => {\n        this.play()\n      })\n    }\n    const pause = <HTMLElement>this.controller.querySelector('.pause')\n    if (pause) {\n      pause.addEventListener('click', () => {\n        this.pause()\n      })\n    }\n    const stop = <HTMLElement>this.controller.querySelector('.stop')\n    if (stop) {\n      stop.addEventListener('click', () => {\n        this.stop()\n      })\n    }\n\n    // on mouse\n    this.itemsEle.addEventListener('mouseenter', e => this.mouseOver(e), true)\n    this.itemsEle.addEventListener('mouseleave', e => this.mouseOut(e), true)\n\n    // on keyboard\n    if (this.options.keyboardNav) {\n      document.addEventListener('keydown', event => {\n        switch (event.keyCode) {\n          case 37:\n            this.stop()\n            this.prevItem()\n            break\n          case 39:\n            this.stop()\n            this.nextItem()\n            break\n        }\n      })\n    }\n\n    // on autoplay\n    if (this.options.autoplay) {\n      if (typeof this.options.autoplay !== 'number') {\n        console.error('Autoplay must be type of number!')\n      } else if (this.options.autoplay <= 500) {\n        console.error('Autoplay must be higher then 500!')\n      } else {\n        this.autoplay()\n      }\n    }\n  }\n\n  mouseOver(event: any) {\n    if (event.target !== this.itemsEle) return\n    this.pause()\n  }\n\n  mouseOut(event: any) {\n    if (event.target !== this.itemsEle) return\n    this.play()\n  }\n\n  read() {\n    return new Date().getTime() - this._time\n  }\n\n  autoplay() {\n    this._timeout = this.options.autoplay\n    this._stop = false\n    this._paused = false\n    this._time = 0\n    this._running = false\n    this.autoplayNext()\n  }\n\n  pause() {\n    if (this._paused || !this._running) return // prevent multiple calls\n    const pastTime = new Date().getTime() - this._time\n    this._timeout = Math.round(Number(this._timeout) - pastTime) + 1\n    this._paused = true\n    this._running = false\n    this._time = 0\n  }\n\n  play() {\n    if (!this._paused || this._running) return // prevent multiple calls\n    this._paused = false\n    this._stop = false\n    this.autoplayNext()\n  }\n\n  async autoplayNext() {\n    if (this._running) return\n    this._running = true\n    this._time = new Date().getTime() // start timer\n    const index = this.nodes.indexOf(this.activeItem)\n\n    if (this.options.progress) {\n      this.startProgress(index)\n    }\n\n    // sleep\n    let stp = 0\n    while (stp !== Math.round(Number(this._timeout) / 100)) {\n      await timer(100)\n      if (this._stop || this._paused) return\n      stp++\n    }\n\n    this._running = false\n    this._timeout = this.options.autoplay\n\n    if (index !== this.maxArrayLength) {\n      this.nextItem()\n      this.autoplayNext()\n    }\n\n    if (this.options.loop && index === this.maxArrayLength) {\n      this.nextItem()\n      this.autoplay()\n    }\n  }\n\n  stop(noPlay: boolean = false) {\n    clearTimeout(this._call)\n    this._stop = true\n    this._running = false\n    this._paused = false\n    const progressBarActive = this.controller.querySelector('.progress .item.active')\n    if (progressBarActive) {\n      const inner = progressBarActive.getElementsByTagName('div')[0]\n      inner.style.width = '0%'\n    }\n    if (this.options.autoplay && !noPlay) {\n      this._call = setTimeout(() => {\n        this.autoplay()\n      }, 1000)\n    }\n  }\n\n  createKey() {\n    for (let i = 0; i < this.maxLength; i++) {\n      this.items[i].setAttribute('index', i.toString())\n    }\n  }\n\n  buildHeight() {\n    let maxHeight = 0\n    for (let i = 0; i < this.maxLength; i++) {\n      const height = (<HTMLElement>this.items[i].getElementsByClassName('inner')[0])\n        .offsetHeight\n      if (height > maxHeight) maxHeight = height\n    }\n    ;(<HTMLElement>this.carousel.getElementsByClassName('carousel__items')[0]).style.height = `${maxHeight}px` // prettier-ignore\n  }\n\n  createProgress() {\n    let progress = this.controller.getElementsByClassName('progress')[0]\n    if (!progress) {\n      progress = document.createElement('div')\n      progress.classList.add('progress')\n      progress = this.controller.appendChild(progress)\n    }\n    for (let i = 0; i < this.maxLength; i++) {\n      const newProgressBarItem = document.createElement('div')\n      newProgressBarItem.classList.add('item')\n      const inner = document.createElement('div')\n      newProgressBarItem.appendChild(inner)\n      progress.appendChild(newProgressBarItem)\n    }\n  }\n\n  async startProgress(index: number) {\n    const timeoutPrecent = Math.round(\n      (Number(this._timeout) / Number(this.options.autoplay)) * 100\n    )\n    let percent = timeoutPrecent === 100 ? 0 : (timeoutPrecent - 100) * -1\n    while (percent <= 100) {\n      await timer(Number(this.options.autoplay) / 100)\n      if (this._stop) {\n        this.moveProgress(0, index)\n      }\n      if (this._stop || this._paused) {\n        break\n      }\n      this.moveProgress(percent, index)\n      percent++\n    }\n  }\n\n  moveProgress(percent: number, index: number) {\n    const progressBarActive = this.controller.querySelector('.progress .item.active')\n    if (progressBarActive) progressBarActive.classList.remove('acitve')\n    const progressBar = this.controller.querySelectorAll('.progress .item')[index]\n    progressBar.classList.add('active')\n    const inner = progressBar.getElementsByTagName('div')[0]\n    progressBar.classList.remove('transition')\n    inner.style.width = `${percent}%`\n    if (percent === 100) {\n      progressBar.classList.add('transition')\n      inner.style.width = '0%'\n    }\n  }\n\n  createPrev(): HTMLElement {\n    const div = document.createElement('div')\n    div.classList.add('prev')\n    if (typeof this.options.prev === 'string') {\n      div.innerHTML = this.options.prev\n    } else {\n      div.innerText = '←'\n    }\n    return this.controller.appendChild(div)\n  }\n\n  createNext(): HTMLElement {\n    const div = document.createElement('div')\n    div.classList.add('next')\n    if (typeof this.options.next === 'string') {\n      div.innerHTML = this.options.next\n    } else {\n      div.innerText = '→'\n    }\n    return this.controller.appendChild(div)\n  }\n\n  nextItem() {\n    if (document.hidden) return\n    this.activeItem.classList.remove('active')\n    const activeIndex = this.nodes.indexOf(this.activeItem)\n    const nextIndex = activeIndex === this.maxArrayLength ? 0 : activeIndex + 1\n    const nextItem = this.items[nextIndex]\n    nextItem.classList.add('active')\n    this.activeItem = nextItem\n  }\n\n  prevItem() {\n    if (document.hidden) return\n    this.activeItem.classList.remove('active')\n    const activeIndex = this.nodes.indexOf(this.activeItem)\n    const prevIndex = activeIndex - 1 < 0 ? this.maxArrayLength : activeIndex - 1\n    const prevItem = this.items[prevIndex]\n    prevItem.classList.add('active')\n    this.activeItem = prevItem\n  }\n}\n"],"names":["timer","ms","Promise","r","setTimeout","[object Object]","element","options","this","autoplay","prev","next","progress","loop","pauseOnHover","keyboardNav","carousel","controller","querySelector","itemsEle","Error","items","getElementsByClassName","nodes","Array","from","maxLength","length","maxArrayLength","classList","add","activeItem","buildHeight","createKey","initCtrl","onHiddenDocument","cb","hidden","stop","document","addEventListener","createProgress","prevCtrl","createPrev","prevItem","nextCtrl","createNext","nextItem","play","pause","e","mouseOver","mouseOut","event","keyCode","console","error","target","Date","getTime","_time","_timeout","_stop","_paused","_running","autoplayNext","pastTime","Math","round","Number","index","indexOf","startProgress","stp","noPlay","clearTimeout","_call","progressBarActive","getElementsByTagName","style","width","i","setAttribute","toString","maxHeight","height","offsetHeight","createElement","appendChild","newProgressBarItem","inner","timeoutPrecent","percent","moveProgress","remove","progressBar","querySelectorAll","div","innerHTML","innerText","activeIndex","nextIndex","prevIndex"],"mappings":"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"}